" vimrc

" ======= Plugins ======

call plug#begin('~/.vim/plugged')

" buffer explorer
Plug 'jlanzarotta/bufexplorer'

" show line indents
Plug 'Yggdroot/indentLine'

" open recent files
Plug 'vim-scripts/mru.vim'

Plug 'maksimr/vim-jsbeautify'
Plug 'pangloss/vim-javascript', { 'tag': '2adca537eeec4891ad668f653d3ac4bff60f44a6', 'for': ['javascript', 'javascript.jsx'] }

" file explorer, persisted across tabs
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'

" autocompletion (with tab)
Plug 'ervandew/supertab'

Plug 'jiangmiao/auto-pairs'

" syntax checking
Plug 'scrooloose/syntastic'

" custom tab layout
Plug 'gcmt/taboo.vim'

" custom bottom status bar
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" autoformat
Plug 'Chiel92/vim-autoformat'

" whitespace highlighting
Plug 'ntpeters/vim-better-whitespace'

" better pasting (auto set paste)
Plug 'ConradIrwin/vim-bracketed-paste'

" comment / uncommenter
Plug 'tpope/vim-commentary'

" fast movement
Plug 'easymotion/vim-easymotion'

" github integration
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

" scope highlighting
Plug 'justinmk/vim-matchparenalways'

" languages
Plug 'sheerun/vim-polyglot'

" smooth scrolling
Plug 'terryma/vim-smooth-scroll'

" start screen
Plug 'mhinz/vim-startify'

" surround quotes
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'

" window management
Plug 'wesQ3/vim-windowswap'

" colors
Plug 'wellsjo/wellsokai.vim'

call plug#end()

" ======= Editor =======

" search
set ignorecase                      " case-insensitive search
set smartcase                       " case-sensitive search when using caps
set incsearch                       " show match while typing pattern
set hlsearch                        " highlight search results
" set autochdir

" colors, syntax
syntax on                           " syntax highlighting
set number                          " number lines
set autoindent
filetype plugin indent on
let t_Co=256
let mapleader=" "
let g:netrw_dirhistmax = 0
set term=screen-256color
colorscheme wellsokai
set list                            " see indent lines
set listchars=tab:\|\

" editing, tabs, indenting
set expandtab                       " tab key creates spaces
set smarttab
set cindent
set tabstop=4                       " number of space for tab character
set softtabstop=2                   " number of spaces in tab when editing
set shiftwidth=2                    " number of spaces used for >>, <<, ==
set backspace=2                     " best backspace setting
scriptencoding utf-8
set encoding=utf-8

" status bar
set laststatus=2
set cursorline
set nocursorcolumn

" start the cursor from where you last left off in the file
autocmd BufReadPost * call s:SetCursorPosition()
function! s:SetCursorPosition()
  if &filetype !~ 'svn\|commit\c'
    if line("'\"") > 0 && line("'\"") <= line("$")
      exe "normal! g`\""
      normal! zz
    endif
  end
endfunction

" enables resizing vim panes from tmux
set mouse+=a
if &term =~ '^screen'
  set ttymouse=xterm2
endif

" ======= Shortcuts =======

nnoremap <leader>q :q<CR>
nnoremap <leader>f :w<CR>
nnoremap <leader>g :Autoformat<cr>
inoremap jj <esc>:w<CR>
inoremap jk <esc>:<cr><right>
nnoremap gr gT

" switch buffers with tab
nnoremap <tab> :bn<CR>
noremap <S-tab> :bp<CR>

" resize windows with arrow keys
nnoremap <Left> :vertical resize +5<CR>
nnoremap <Right> :vertical resize -5<CR>
nnoremap <Up> :resize +5<CR>
nnoremap <Down> :resize -5<CR>

" toggle intent lines
map <Leader>i :IndentLinesToggle<CR>

" auto-center search results
nnoremap z zz
nnoremap n nzz
nnoremap N Nzz

" move windiws with j, k, o, p
map <silent> <C-o> :wincmd h<CR>
map <silent> <C-p> :wincmd l<CR>
map <silent> <C-j> :wincmd j<CR>
map <silent> <C-k> :wincmd k<CR>

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" Activate EasyMotion with space
map <Leader> <Plug>(easymotion-prefix)

" Search and replace shorthand with ;;
nnoremap ;; :%s:::cg<Left><Left><Left><Left>

" c-g highlights all the words under the cursor and c-h toggles highlighting
function! ToggleHighlightUnderWord()
  let @/='\<'.expand("<cword>").'\>'
  set hlsearch
endfunction
map <c-g> :call ToggleHighlightUnderWord()<CR>
map <c-h> :set hlsearch!<CR>

" persistent undo for files between sessions
set undofile
set undolevels=1000
set undoreload=1000
if !isdirectory(expand("~/.vim/.backupdir/"))
  silent !mkdir -p ~/.vim/.backupdir
endif
if !isdirectory(expand("~/.vim/.swap/"))
  silent !mkdir -p ~/.vim/.swap
endif
if !isdirectory(expand("~/.vim/.undo/"))
  silent !mkdir -p ~/.vim/.undo
endif
set backupdir^=~/.vim/.backup/
set directory^=~/.vim/.swap/
set undodir^=~/.vim/.undo/

" ======= Plugin Settings =======

" Syntastic
let g:syntastic_check_on_open = 1
let g:syntastic_mode_map = { 'passive_filetypes': ['html']  }

" MRU
let MRU_File = $HOME . '/.vim_mru_files'
let MRU_Window_Height = 35
nnoremap m :MRU<cr>

" whitespace
highlight ExtraWhitespace ctermbg=red

" Smooth scroll
nnoremap <CR> :call smooth_scroll#down(25, 20, 2)<cr>
nnoremap <silent> <c-d> :call smooth_scroll#down(15, 20, 2)<cr>
nnoremap <silent> <c-u> :call smooth_scroll#up(15, 20, 2)<cr>

" Nerd Tree
nnoremap \ :NERDTreeTabsToggle<Cr>
let g:NERDTreeWinSize = 30
let NERDTreeShowHidden=0

" Taboo (tab labels)
let g:taboo_modified_tab_flag="+"
let g:taboo_tab_format=' %N. %f %m '

" Status line plugin
let g:airline#extensions#syntastic#enabled = 1
let g:airline_theme='bubblegum'
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_left_sep = '»'
let g:airline_left_sep = ''
let g:airline_right_sep = '«'
let g:airline_right_sep = ''
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" indentLine
let g:indentLine_color_term = 239
let g:indentLine_char = '|'
let g:indentLine_enabled = 0
