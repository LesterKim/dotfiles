" Load plugins from /bundles first
execute pathogen#infect()

" ======= Editor =======

set number
set ignorecase
set smartcase
set incsearch
set hlsearch
set autochdir
syntax on
filetype on
filetype plugin on
filetype indent on
let t_Co=256
let mapleader=" "
set term=screen-256color

" persistent undo for files between sessions
set undofile
set undodir=$HOME/.dotfiles/vim/tmp/undo
set undolevels=1000
set undoreload=1000
set backupdir=$HOME/.dotfiles/vim/tmp/backup

" Get rid of that annoying netrwhist file stuff
let g:netrw_dirhistmax = 0

" Tab settings
set expandtab
set tabstop=4
set softtabstop=2
set shiftwidth=2
set textwidth=80
set autoindent
set smartindent
set backspace=2
scriptencoding utf-8
set encoding=utf-8
set list
set listchars=tab:\|\ 

" Colorscheme
colorscheme wellsokai

" Status bar
set laststatus=2
set nocursorline
set nocursorcolumn

" cursor starts at the same location you left off
autocmd BufReadPost * call s:SetCursorPosition()
function! s:SetCursorPosition()
  if &filetype !~ 'svn\|commit\c'
    if line("'\"") > 0 && line("'\"") <= line("$")
      exe "normal! g`\""
      normal! zz
    endif
  end
endfunction

" Tmux mouse fix (for resizing vim panes within tmux)
set mouse+=a
if &term =~ '^screen'
  set ttymouse=xterm2
endif

" ======= Mappings =======

" Toggle tagbar with ,,
nmap ,, :TlistToggle<CR>

" force write to read-only files with 'sudow'
cnoremap sudow w !sudo tee % >/dev/null

" exit file with Q
nnoremap Q :q<CR>
nnoremap <c-f> :w<CR>

" switch buffers with tab
nnoremap <tab> :bn<CR>
noremap <S-tab> :bp<CR>

" % highlights scope
noremap % v%

" I prefer gr to go back a tab, also left and right arrow keys
nnoremap gr gT

" resize windows with arrow keys
nnoremap <Left> :vertical resize +5<CR>
nnoremap <Right> :vertical resize -5<CR>
nnoremap <Up> :resize +5<CR>
nnoremap <Down> :resize -5<CR>

" toggle intent lines
map <Leader>i :IndentLinesToggle<CR>

" auto-center search results
nnoremap z zz
nnoremap n nzz
nnoremap N Nzz

" navigate window splits with c-o and c-p
map <silent> <C-o> :wincmd h<CR>
map <silent> <C-p> :wincmd l<CR>
map <silent> <C-j> :wincmd j<CR>
map <silent> <C-k> :wincmd k<CR>

" Activate EasyMotion with space
map <Leader> <Plug>(easymotion-prefix)

" Search and replace shorthand with ;;
nnoremap ;; :%s:::cg<Left><Left><Left><Left>

" you can press c-g to highlight all the words under the cursor
" and c-h to toggle highlighting
function! ToggleHighlightUnderWord()
  let @/='\<'.expand("<cword>").'\>'
  set hlsearch
endfunction
map <c-g> :call ToggleHighlightUnderWord()<CR>
map <c-h> :set hlsearch!<CR>

" auto re-load vimrc if changes are detected :)
" lol this is a stupid hack but I refuse to remove it
augroup myvimrc
  au!
  au BufWritePost .vimrc,_vimrc,vimrc,.gvimrc,_gvimrc,gvimrc so $MYVIMRC | if has('gui_running') | so $MYGVIMRC | endif
augroup END

" ======= Plugin Settings =======

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" syntax checkers
let g:syntastic_mode_map = { 'passive_filetypes': ['html']  }
let g:syntastic_javascript_checkers = ['jscs']

" MRU
let MRU_File = $HOME . '/.dotfiles/vim/tmp/vim_mru_files'
let MRU_Window_Height = 35
nnoremap m :MRU<cr>

" whitespace
highlight ExtraWhitespace ctermbg=red

" cntr-p maps to c-t
let g:ctrlp_map = '<c-t>'

" MatchTagAlways
let g:mta_use_matchparen_group = 0
let g:mta_set_default_matchtag_color = 0
hi MatchTag ctermfg=white ctermbg=blue
let g:mta_filetypes = {
      \ 'html' : 1,
      \ 'xhtml': 1,
      \ 'xml': 1,
      \ 'twig': 1
      \}

" Smooth scroll
nnoremap <CR> :call smooth_scroll#down(25, 20, 2)<cr>
nnoremap <silent> <c-d> :call smooth_scroll#down(15, 20, 2)<cr>
nnoremap <silent> <c-u> :call smooth_scroll#up(15, 20, 2)<cr>

" Nerd Tree
nnoremap \ :NERDTreeTabsToggle<Cr>
let g:NERDTreeWinSize = 45
let NERDTreeShowHidden=0

" Taboo (tab labels)
let g:taboo_modified_tab_flag="+"
let g:taboo_tab_format=' %N. %f %m '

" Status line plugin
let g:airline_powerline_fonts = 1
" let g:airline_theme='bubblegum'
let g:airline_theme='bubblegum'
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_left_sep = '»'
let g:airline_left_sep = ''
let g:airline_right_sep = '«'
let g:airline_right_sep = ''
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.branch = '⎇'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.whitespace = 'Ξ'

" indentLine
let g:indentLine_color_term = 239
let g:indentLine_char = '│'
