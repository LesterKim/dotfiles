" Load plugins from /bundles first
execute pathogen#infect()

" ======= Editor =======

set number
set ignorecase
set smartcase
set incsearch
set hlsearch
syntax on
filetype on
filetype plugin on
filetype indent on
let t_Co=256
let mapleader=" "
set term=screen-256color
set undolevels=1000

" Get rid of that annoying netrwhist file stuff
let g:netrw_dirhistmax = 0

" Tab settings
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4
set autoindent
set smartindent

" Colorscheme
set background=dark
let g:seoul256_background=236
colo seoul256

" Status bar
set laststatus=2
set cursorline
set nocursorcolumn

" Code folding settings
set foldmethod=indent   "fold based on indent
set foldnestmax=10      "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=10        "this is just what i use

" Tmux mouse fix (for resizing vim panes within tmux)
set mouse+=a
if &term =~ '^screen'
    set ttymouse=xterm2
endif

" ======= CUSTOM COLORS =======

hi Visual ctermfg=black ctermbg=yellow
hi MatchParen cterm=none ctermfg=white ctermbg=green
hi Search ctermfg=black ctermbg=yellow
hi IncSearch ctermfg=yellow ctermbg=black
hi TabLineSel ctermfg=white ctermbg=black
hi TabLine ctermfg=black ctermbg=white
hi StatusLine ctermbg=yellow

" ======= Mappings =======

" Toggle tagbar with ,,
nmap ,, :TlistToggle<CR>

" save and exit file with Q
nnoremap <Leader><Leader> :x<CR>
nnoremap Q :x<CR>
nnoremap <c-f> :w<CR>

" % highlights scope
noremap % v%

" fuzzy finder shortcut call
nnoremap <c-t> :call fzf#run({'sink':'tabe'}) <Cr>

" I prefer gr to go back a tab, also left and right arrow keys
nnoremap gr gT

" resize windows with arrow keys
nnoremap <Left> :vertical resize +5<CR>
nnoremap <Right> :vertical resize -5<CR>
nnoremap <Up> :resize +5<CR>
nnoremap <Down> :resize -5<CR>

" navigate window splits with c-o and c-p
map <silent> <C-h> :wincmd h<CR>
map <silent> <C-l> :wincmd l<CR>
map <silent> <C-j> :wincmd j<CR>
map <silent> <C-k> :wincmd k<CR>

" Activate EasyMotion with space
map <Leader> <Plug>(easymotion-prefix)

" Open MRU with m
nnoremap m :MRU<cr>

" Search and replace shorthand with ;;
nnoremap ;; :%s:::cg<Left><Left><Left><Left>

" you can press c-g to highlight all the words under the cursor
" and c-h to toggle highlighting
function! ToggleHighlightUnderWord()
        let @/='\<'.expand("<cword>").'\>'
        set hlsearch
endfunction
map <c-g> :call ToggleHighlightUnderWord()<CR>
map <c-h> :set hlsearch!<CR>

" ======= Plugin Settings =======

" Neocomplete
" enable auto-complete plugin settings kept in seperate file
let g:neocomplcache_enable_at_startup = 1
source ~/.wells_dotfiles/vim/neocomplete_settings.vim

" Syntastic
let g:syntastic_check_on_open=1

" FZF (fuzzy search)
set rtp+=~/.fzf

" Smooth scroll
nnoremap <CR> :call smooth_scroll#down(25, 20, 2)<cr>
nnoremap <silent> <c-d> :call smooth_scroll#down(15, 20, 2)<cr>
nnoremap <silent> <c-u> :call smooth_scroll#up(15, 20, 2)<cr>

" Nerd Tree
nnoremap \ :NERDTreeTabsToggle<Cr>
let g:NERDTreeWinSize = 45
let NERDTreeShowHidden=0

" Taboo (tab labels)
let g:taboo_modified_tab_flag="+"
let g:taboo_tab_format=' %N. %f %m '

" MRU options
let MRU_Window_Height = 40

" Status line plugin
let g:airline_powerline_fonts = 1
let g:airline_theme='jellybeans'
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_symbols.space = "\ua0"
